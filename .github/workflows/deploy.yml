# =============================================================================
# GitHub Actions Workflow: Deploy to PyPI
# =============================================================================

name: deploy

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

permissions:
  contents: write

jobs:
  # ========================================================================
  # Build wheels (Linux, Windows, macOS universal2 built on Intel)
  # ========================================================================
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-latest]

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python environment
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Build wheels with cibuildwheel
        uses: pypa/cibuildwheel@v3.1.4
        with:
          output-dir: wheelhouse
        env:
          # Skip Windows 32-bit
          CIBW_SKIP: "*-win32"

          CIBW_TEST_REQUIRES: "pytest"
          CIBW_TEST_COMMAND: "pytest -q {project}/tests"
          CIBW_BEFORE_BUILD: "pip install --upgrade pip setuptools wheel"

      - name: Upload wheel artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: wheelhouse/*.whl

  # ========================================================================
  # Build source distribution (sdist)
  # ========================================================================
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Python environment
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Build source distribution
        run: |
          python -m pip install --upgrade pip build
          python -m build --sdist
          ls -la dist/

      - name: Upload source distribution artifact
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  # ========================================================================
  # Test macOS universal2 wheel on Apple Silicon (arm64)
  # ========================================================================
  test_macos_arm:
    name: Test macOS universal2 wheel on Apple Silicon
    needs: [build_wheels]
    runs-on: macos-latest   # Apple Silicon runner
    steps:
      - uses: actions/checkout@v4

      - name: Download all wheel artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: wheels-*
          merge-multiple: true

      - name: Set up Python environment
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install universal2 wheel and run tests (arm64 native)
        shell: bash
        run: |
          set -euo pipefail
          echo "Available wheels:"
          ls -la dist/*.whl
          # Install only the macOS universal2 wheel
          pip install dist/*macosx_*_universal2.whl
          pytest -q tests

  # ========================================================================
  # Publish to PyPI (only after all builds + macOS arm64 test succeed)
  # ========================================================================
  upload_pypi:
    name: Publish to PyPI
    needs: [build_wheels, build_sdist, test_macos_arm]
    runs-on: ubuntu-latest
    steps:
      - name: Download wheel artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: wheels-*
          merge-multiple: true

      - name: Download source distribution
        uses: actions/download-artifact@v4
        with:
          name: sdist
          path: dist

      - name: Verify artifacts
        run: |
          echo "Wheels found:" && ls -la dist/*.whl || true
          echo "Source dists found:" && ls -la dist/*.tar.gz || true

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          verbose: true