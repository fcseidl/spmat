name: Build and Deploy

on:
  push:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-24.04-arm, windows-latest, macos-13, macos-latest]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.12" }

      - name: Build wheels with cibuildwheel
        uses: pypa/cibuildwheel@v3.1.4
        with: { output-dir: wheelhouse }
        env:
          CIBW_SKIP: "*-win32"
          CIBW_BEFORE_BUILD: "python -m pip install --upgrade pip setuptools wheel"
          CIBW_TEST_REQUIRES: "pytest"
          CIBW_TEST_COMMAND: "pytest -v {project}/tests"

      - name: Upload wheel artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: wheelhouse/*.whl

  make_sdist:
    name: Make SDist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.12" }
      - name: Build sdist
        run: |
          python -m pip install --upgrade pip build
          python -m build --sdist

      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  collect_and_deploy:
    name: Collect and Deploy
    needs: [build_wheels, make_sdist]
    runs-on: ubuntu-latest
    # Only run this job for releases
    if: ${{ github.event_name == 'release' && github.event.action == 'published' }}
    steps:
      - name: Download release artifacts (wheels + sdist)
        uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: cibw-*
          merge-multiple: true

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip-existing: true
          verbose: true
